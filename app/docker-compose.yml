version: "3"
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka1:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092
    depends_on:
      - zookeeper

  kafka2:
    image: 'bitnami/kafka:latest'
    ports:
      - '9093:9093'
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:9093
    depends_on:
      - zookeeper

  kafka3:
    image: 'bitnami/kafka:latest'
    ports:
      - '9094:9094'
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka3:9094
    depends_on:
      - zookeeper
      
  db:
    image: postgres:latest
    environment:
        POSTGRES_USER: mamochi
        POSTGRES_PASSWORD: mamochi
        POSTGRES_DB: mamochi
    ports:
        - "5432:5432"
    volumes:
        - pgdata:/var/lib/postgresql/data
        - ./create_database.sql:/docker-entrypoint-initdb.d/create_database.sql
        - ./create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    restart: always

  producer:
    build: .
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    stdin_open: true
    tty: true
    restart: always
    
volumes:
  pgdata:
